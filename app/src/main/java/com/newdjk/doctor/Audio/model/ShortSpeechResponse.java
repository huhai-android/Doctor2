/*
 * Yitu Speech REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.newdjk.doctor.Audio.model;

import android.os.Build;
import android.support.annotation.RequiresApi;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;



/**
 * ShortSpeechResponse
 */

public class ShortSpeechResponse{


  @SerializedName("resultText")
  private String resultText = null;
  public ShortSpeechResponse resultText(String resultText) {
    this.resultText = resultText;
    return this;
  }

  

  /**
  * 转录结果。
  * @return resultText
  **/
  public String getResultText() {
    return resultText;
  }
  public void setResultText(String resultText) {
    this.resultText = resultText;
  }
  @RequiresApi(api = Build.VERSION_CODES.KITKAT)
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShortSpeechResponse shortSpeechResponse = (ShortSpeechResponse) o;
    return Objects.equals(this.resultText, shortSpeechResponse.resultText) &&
        super.equals(o);
  }

  @RequiresApi(api = Build.VERSION_CODES.KITKAT)
  @Override
  public int hashCode() {
    return Objects.hash(resultText, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShortSpeechResponse {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    resultText: ").append(toIndentedString(resultText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
